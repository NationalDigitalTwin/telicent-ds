import{j as o,a as c,F as p}from"./DefaultPropsProvider-BXx8Lxdp.js";import{B as a}from"./ButtonBase-Ds7yUReY.js";import{M as s}from"./TelicentMark-BdsZTeAB.js";import"./DataSetIcon-FNIYQS_l.js";import"./UserIcon-BvSIIGLn.js";import{C as d}from"./UserStatus-D7FRWyvs.js";import"./UserProfile-Uv-GgKh0.js";import"./Text-mT4dy15X.js";import"./Chip-CW_ChayI.js";import"./TreeView-DvhyyXg0.js";import"./UserProfileContent-cvJ4RGHp.js";import{F as i}from"./FloatingPanelItem-DEJhajpl.js";import"./extends-EO7Nsyo1.js";import"./index-uubelm5h.js";import"./generateUtilityClasses-DUdad9y1.js";import"./styled-CsMkIDyT.js";import"./useTheme-BLQURKm4.js";import"./TransitionGroupContext-CLVPPxcC.js";import"./assertThisInitialized-B9jnkVVz.js";import"./inheritsLoose-DR8r8Ogv.js";import"./SvgIcon-Cq6PF86G.js";import"./useTheme-BwmRXO23.js";import"./Container-esCjEV6P.js";import"./styled-B1p8gUNN.js";import"./useThemeProps-CoIeOuDd.js";import"./index-DXqQCM1T.js";import"./Menu-Bg9HOTiE.js";import"./index-CwoBbyUx.js";import"./Popover-DDsTovIT.js";import"./utils-DLK7DDdD.js";import"./index-CfOt2XX2.js";import"./resolveComponentProps-wJjsJM5R.js";import"./Paper-DPZwIbCZ.js";import"./index-D3eZ-H7s.js";import"./createSvgIcon-B5EEX4Vz.js";import"./colorManipulator-BmdrHEzF.js";import"./ListItemText-BCHmlY2R.js";const l=e=>o(a,{component:"ul",columnGap:2,padding:1,sx:{display:"flex",flexDirection:"row",position:"absolute",width:"fit-content",bottom:0,left:0},...e,children:e.children});l.__docgenInfo={description:"Appears at the bottom of the screen. Holds `FloatingPanelItem` items",methods:[],displayName:"FloatingPanelDock",composes:["PropsWithChildren"]};const X={title:"Surfaces/FloatingPanel/FloatingPanelDock",component:l,tags:["autodocs"],decorators:e=>o(a,{height:200,children:e()})},t={args:{children:c(p,{children:[o(i,{icon:o(d,{fontSize:"inherit"}),label:"Timeline",count:10,onMaximise:()=>alert("Clicked timeline docked item"),onRemove:()=>alert("Clicked close timeline docked item")}),o(i,{icon:o(s,{fontSize:"inherit"}),label:"Map",count:6,onMaximise:()=>alert("Clicked map docked item"),onRemove:()=>alert("Clicked close map docked item")})]})}};var m,r,n;t.parameters={...t.parameters,docs:{...(m=t.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    children: <>
        <FloatingPanelItem icon={<ClockIcon fontSize="inherit" />} label="Timeline" count={10} onMaximise={() => alert("Clicked timeline docked item")} onRemove={() => alert("Clicked close timeline docked item")} />
        <FloatingPanelItem icon={<MapIcon fontSize="inherit" />} label="Map" count={6} onMaximise={() => alert("Clicked map docked item")} onRemove={() => alert("Clicked close map docked item")} />
      </>
  }
}`,...(n=(r=t.parameters)==null?void 0:r.docs)==null?void 0:n.source}}};const Y=["Demo"];export{t as Demo,Y as __namedExportsOrder,X as default};
