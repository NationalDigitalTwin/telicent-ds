import{j as r}from"./jsx-runtime-CexXSJP5.js";import{T as $}from"./TeliSelect-D-Rbb5NF.js";import{z as L}from"./index-DXqQCM1T.js";import{T as E}from"./TeliTableContainer-BZqeqqk9.js";import{T as V}from"./TeliTableHead-CzAYAro_.js";import{T as B}from"./TeliTableBody-DgYW-CLB.js";import{T as y}from"./TeliTableRow-Dlhix1-f.js";import{a as M,T as o}from"./TeliTableCell-BQESDQ__.js";import{l as D}from"./lodash-DZrcJQkD.js";/* empty css              */import{_ as U}from"./createTheme-BI2OWDpv.js";import{_ as j}from"./extends-BFqQA52f.js";import{r as A}from"./index-BP8_t0zE.js";import{g as G,s as z,c as F,a as J}from"./styled-CwhWP0k9.js";import{g as K}from"./generateUtilityClasses-CPjhs1S_.js";import{u as O}from"./DefaultPropsProvider-D6MvNwoC.js";function X(e){return G("MuiTable",e)}K("MuiTable",["root","stickyHeader"]);const Y=["className","component","padding","size","stickyHeader"],Q=e=>{const{classes:a,stickyHeader:t}=e;return J({root:["root",t&&"stickyHeader"]},X,a)},Z=z("table",{name:"MuiTable",slot:"Root",overridesResolver:(e,a)=>{const{ownerState:t}=e;return[a.root,t.stickyHeader&&a.stickyHeader]}})(({theme:e,ownerState:a})=>j({display:"table",width:"100%",borderCollapse:"collapse",borderSpacing:0,"& caption":j({},e.typography.body2,{padding:e.spacing(2),color:(e.vars||e).palette.text.secondary,textAlign:"left",captionSide:"bottom"})},a.stickyHeader&&{borderCollapse:"separate"})),v="table",ee=A.forwardRef(function(a,t){const n=O({props:a,name:"MuiTable"}),{className:l,component:p=v,padding:i="normal",size:u="medium",stickyHeader:b=!1}=n,S=U(n,Y),d=j({},n,{component:p,padding:i,size:u,stickyHeader:b}),C=Q(d),w=A.useMemo(()=>({padding:i,size:u,stickyHeader:b}),[i,u,b]);return r.jsx(M.Provider,{value:w,children:r.jsx(Z,j({as:p,role:p===v?null:"table",ref:t,className:F(C.root,l),ownerState:d},S))})}),H=({compact:e=!1,minWidth:a,name:t,children:n,...l})=>r.jsx(ee,{sx:{minWidth:a},size:e?"small":"medium","aria-label":t,...l,children:n});H.__docgenInfo={description:"",methods:[],displayName:"TeliTable",props:{compact:{required:!1,tsType:{name:"boolean"},description:"If true, the table will be compact (smaller)",defaultValue:{value:"false",computed:!1}},minWidth:{required:!1,tsType:{name:"number"},description:"Minimum width of the table"},name:{required:!1,tsType:{name:"string"},description:"The name of the table element"}},composes:["TableProps"]};const q=(e,a)=>e===0?"left":a,re=(e,a)=>{if(e===0&&a)return{component:"th",scope:"row"}},ae=(e,a)=>a?e.map((t,n)=>[(n+=1).toString(),...t]):e,_=(e,a,t="")=>a?[t,...e]:e,h=(e,a)=>`${e}::${D.kebabCase(a)}`,c=({columns:e=[],rows:a=[],name:t,align:n="left",addBorderToLastRow:l,bordered:p=!1,caption:i,compact:u=!1,maxHeight:b,minWidth:S,numberRows:d=!1,numberColumnHeading:C="",renderColumnCell:w,stickyHeader:I=!1,verticalHeader:N=!1})=>{if(e.length===0||a.length===0)return null;const W=(f,T)=>{const k=L.string({required_error:"Column is required",invalid_type_error:"Column must be a string"}).safeParse(f);if(k.success){const P=k.data;return r.jsx(o,{align:q(T,n),children:P},h("column",P))}return console.error("Unable to render columns. Ensure columns is an array of strings or use renderColumnCell"),null};return r.jsx(E,{maxHeight:b,bordered:p,children:r.jsxs(H,{compact:u,minWidth:S,name:t,stickyHeader:I,children:[i&&r.jsx("caption",{children:i}),r.jsx(V,{children:r.jsx(y,{children:w?_(e,d,C).map(w):_(e,d,C).map(W)})}),r.jsx(B,{children:ae(a,d).map(f=>r.jsx(y,{id:h("row",f[0]),addBorderToLastRow:l??!!i,children:f.map((T,R)=>r.jsx(o,{id:h("column",T),...re(R,N),align:q(R,n),children:T},h("column",T)))},h("row",f[0])))})]})})};c.__docgenInfo={description:"",methods:[],displayName:"TeliBasicTable",props:{columns:{required:!1,tsType:{name:"Array",elements:[{name:"union",raw:"string | Record<string, string>",elements:[{name:"string"},{name:"Record",elements:[{name:"string"},{name:"string"}],raw:"Record<string, string>"}]}],raw:"Array<string | Record<string, string>>"},description:"Table column headers",defaultValue:{value:"[]",computed:!1}},rows:{required:!1,tsType:{name:"Array",elements:[{name:"Array",elements:[{name:"string"}],raw:"Array<string>"}],raw:"Array<Array<string>>"},description:"Table body rows",defaultValue:{value:"[]",computed:!1}},name:{required:!1,tsType:{name:'TeliTableProps["name"]',raw:'TeliTableProps["name"]'},description:""},addBorderToLastRow:{required:!1,tsType:{name:'TeliTableRowProps["addBorderToLastRow"]',raw:'TeliTableRowProps["addBorderToLastRow"]'},description:""},align:{required:!1,tsType:{name:'TeliTableCellProps["align"]',raw:'TeliTableCellProps["align"]'},description:"",defaultValue:{value:'"left"',computed:!1}},bordered:{required:!1,tsType:{name:'TeliTableContainerProps["bordered"]',raw:'TeliTableContainerProps["bordered"]'},description:"",defaultValue:{value:"false",computed:!1}},caption:{required:!1,tsType:{name:"string"},description:"A short heading for the table content"},compact:{required:!1,tsType:{name:'TeliTableProps["compact"]',raw:'TeliTableProps["compact"]'},description:"",defaultValue:{value:"false",computed:!1}},maxHeight:{required:!1,tsType:{name:'TeliTableContainerProps["maxHeight"]',raw:'TeliTableContainerProps["maxHeight"]'},description:""},minWidth:{required:!1,tsType:{name:'TeliTableProps["minWidth"]',raw:'TeliTableProps["minWidth"]'},description:""},numberRows:{required:!1,tsType:{name:"boolean"},description:"If true, a column of numbered rows will be added at the start of table",defaultValue:{value:"false",computed:!1}},numberColumnHeading:{required:!1,tsType:{name:"string"},description:"The heading for the numbered rows column",defaultValue:{value:'""',computed:!1}},renderColumnCell:{required:!1,tsType:{name:"signature",type:"function",raw:"(column: any, index?: number) => JSX.Element",signature:{arguments:[{type:{name:"any"},name:"column"},{type:{name:"number"},name:"index"}],return:{name:"JSX.Element"}}},description:`Render column cell
@param column Column data
@param index
@returns JSX.Element`},stickyHeader:{required:!1,tsType:{name:'TeliTableProps["stickyHeader"]',raw:'TeliTableProps["stickyHeader"]'},description:"",defaultValue:{value:"false",computed:!1}},verticalHeader:{required:!1,tsType:{name:"boolean"},description:"If true, the first column will be rendered as a table header",defaultValue:{value:"false",computed:!1}}}};const s=(e,a,t,n)=>[e,a.toString(),t.toString(),n.toString()],m=["Title","Rating","Total episodes","Year"],x=[s("The Fall of the House of Usher",8.1,8,2023),s("Gen V",8,10,"2023 - present"),s("Goosebumps",6.6,10,"2023 - present"),s("Loki",8.2,12,"2021 - present"),s("Bodies",7.5,8,2023),s("Rick and Morty",9.1,74,2013),s("Lessons in Chemistry",7.9,8,"2023 - present"),s("Sex Education",8.3,32,"2019 - 2023"),s("American Horror Story",8,129,"2011 - present"),s("Ahsoka",7.7,9,"2023 - present")];s("The Fall of the House of Usher",8.1,8,2023),s("Gen V",8,10,"2023 - present"),s("Goosebumps",6.6,10,"2023 - present"),s("Loki",8.2,12,"2021 - present"),s("Bodies",7.5,8,2023),s("Rick and Morty",9.1,74,2013),s("Lessons in Chemistry",7.9,8,"2023 - present"),s("Sex Education",8.3,32,"2019 - 2023"),s("American Horror Story",8,129,"2011 - present"),s("Ahsoka",7.7,9,"2023 - present");const se={args:{align:"right",name:"basic-table",columns:m,rows:x},render:e=>r.jsx(c,{...e}),parameters:{docs:{description:{story:"A simple example of the basic table"}}}},Re=se,te={args:{compact:!0,align:"right",name:"dense-table",columns:m,rows:x},render:e=>r.jsx(c,{...e}),parameters:{docs:{description:{story:"A simple example of a dense basic table"}}}},He=te,ne={args:{stickyHeader:!0,bordered:!0,name:"sticky-header-table",columns:m,rows:x},render:e=>r.jsx(c,{...e}),parameters:{docs:{description:{story:"A simple example of a dense basic table"}}}},ke=ne,oe={args:{bordered:!0,verticalHeader:!0,numberRows:!0,name:"custom-header-table",columns:m,rows:x},render:e=>r.jsx(c,{...e}),parameters:{docs:{description:{story:`A caption functions like a heading for a table. Most screen 
        readers announce the content of captions. Captions help users to find a 
        table and understand what it's about and decide if they want to read it.
        <br />
        (WAI tutorial: https://www.w3.org/WAI/tutorials/tables/)`}}}},Pe=oe,le={args:{bordered:!0,name:"custom-columns-table",columns:m,rows:x,renderColumnCell:e=>r.jsxs(o,{minWidth:220,className:"space-y-4",children:[r.jsx("p",{children:e}),r.jsx($,{fullWidth:!0,readOnly:!0,id:`select-${e}`,defaultValue:e,options:[{label:"Title"},{label:"Rating"},{label:"Total episodes"},{label:"Year"}]})]},e)},render:e=>r.jsx(c,{...e}),parameters:{docs:{description:{story:`Table columns can be rendered to fit various scenarios by using 
        <code>renderColumnCell</code> prop`}}}},Ae=le,g=(e,a,t,n,l)=>({name:e,calories:a,fat:t,carbs:n,protein:l}),ie={render:()=>{const e=[g("Frozen yoghurt",159,6,24,4),g("Ice cream sandwich",237,9,37,4.3),g("Eclair",262,16,24,6),g("Cupcake",305,3.7,67,4.3),g("Gingerbread",356,16,49,3.9)];return r.jsx(E,{children:r.jsxs(H,{minWidth:650,name:"telicent-table",children:[r.jsxs(V,{children:[r.jsxs(y,{children:[r.jsx(o,{align:"center",colSpan:1,children:"Food"}),r.jsx(o,{align:"center",colSpan:4,children:"Details"})]}),r.jsxs(y,{children:[r.jsx(o,{children:"Dessert (100g serving)"}),r.jsx(o,{align:"right",children:"Calories"}),r.jsx(o,{align:"right",children:"Fat (g)"}),r.jsx(o,{align:"right",children:"Carbs (g)"}),r.jsx(o,{align:"right",children:"Protein (g)"})]})]}),r.jsx(B,{children:e.map(a=>r.jsxs(y,{children:[r.jsx(o,{component:"th",scope:"row",children:a.name}),r.jsx(o,{align:"right",children:a.calories}),r.jsx(o,{align:"right",children:a.fat}),r.jsx(o,{align:"right",children:a.carbs}),r.jsx(o,{align:"right",children:a.protein})]},a.name))})]})})}},ve=ie;export{Re as B,Pe as C,He as D,ke as S,c as T,Ae as a,H as b,ve as c};
