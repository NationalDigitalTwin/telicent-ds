import { StoryObj } from '@storybook/react';
import { default as TeliTypeahead } from './TeliTypeahead';
import { MultiSelect, FreeSolo } from './stories';

declare const meta: {
    component: typeof TeliTypeahead;
    parameters: {
        docs: {
            description: {
                component: string;
            };
        };
    };
    decorators: ((Story: import('@storybook/csf').PartialStoryFn<import('@storybook/react').ReactRenderer, {
        errorMessage?: string | undefined;
        queryParamKey: string;
        url: string;
        onTransform?: ((data: any) => any) | undefined;
        defaultChecked?: boolean | undefined;
        defaultValue?: unknown;
        suppressContentEditableWarning?: boolean | undefined;
        suppressHydrationWarning?: boolean | undefined;
        accessKey?: string | undefined;
        autoFocus?: boolean | undefined;
        className?: string | undefined;
        contentEditable?: (boolean | "true" | "false") | "inherit" | "plaintext-only" | undefined;
        contextMenu?: string | undefined;
        dir?: string | undefined;
        draggable?: (boolean | "true" | "false") | undefined;
        hidden?: boolean | undefined;
        id?: string | undefined;
        lang?: string | undefined;
        nonce?: string | undefined;
        slot?: string | undefined;
        spellCheck?: (boolean | "true" | "false") | undefined;
        style?: import('../../../node_modules/react').CSSProperties | undefined;
        tabIndex?: number | undefined;
        title?: string | undefined;
        translate?: "yes" | "no" | undefined;
        radioGroup?: string | undefined;
        role?: import('../../../node_modules/react').AriaRole | undefined;
        about?: string | undefined;
        content?: string | undefined;
        datatype?: string | undefined;
        inlist?: any;
        prefix?: string | undefined;
        property?: string | undefined;
        rel?: string | undefined;
        resource?: string | undefined;
        rev?: string | undefined;
        typeof?: string | undefined;
        vocab?: string | undefined;
        autoCapitalize?: string | undefined;
        autoCorrect?: string | undefined;
        autoSave?: string | undefined;
        color?: string | undefined;
        itemProp?: string | undefined;
        itemScope?: boolean | undefined;
        itemType?: string | undefined;
        itemID?: string | undefined;
        itemRef?: string | undefined;
        results?: number | undefined;
        security?: string | undefined;
        unselectable?: "on" | "off" | undefined;
        inputMode?: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search" | undefined;
        is?: string | undefined;
        "aria-activedescendant"?: string | undefined;
        "aria-atomic"?: (boolean | "true" | "false") | undefined;
        "aria-autocomplete"?: "none" | "inline" | "list" | "both" | undefined;
        "aria-braillelabel"?: string | undefined;
        "aria-brailleroledescription"?: string | undefined;
        "aria-busy"?: (boolean | "true" | "false") | undefined;
        "aria-checked"?: boolean | "false" | "mixed" | "true" | undefined;
        "aria-colcount"?: number | undefined;
        "aria-colindex"?: number | undefined;
        "aria-colindextext"?: string | undefined;
        "aria-colspan"?: number | undefined;
        "aria-controls"?: string | undefined;
        "aria-current"?: boolean | "false" | "true" | "page" | "step" | "location" | "date" | "time" | undefined;
        "aria-describedby"?: string | undefined;
        "aria-description"?: string | undefined;
        "aria-details"?: string | undefined;
        "aria-disabled"?: (boolean | "true" | "false") | undefined;
        "aria-dropeffect"?: "none" | "copy" | "execute" | "link" | "move" | "popup" | undefined;
        "aria-errormessage"?: string | undefined;
        "aria-expanded"?: (boolean | "true" | "false") | undefined;
        "aria-flowto"?: string | undefined;
        "aria-grabbed"?: (boolean | "true" | "false") | undefined;
        "aria-haspopup"?: boolean | "false" | "true" | "menu" | "listbox" | "tree" | "grid" | "dialog" | undefined;
        "aria-hidden"?: (boolean | "true" | "false") | undefined;
        "aria-invalid"?: boolean | "false" | "true" | "grammar" | "spelling" | undefined;
        "aria-keyshortcuts"?: string | undefined;
        "aria-label"?: string | undefined;
        "aria-labelledby"?: string | undefined;
        "aria-level"?: number | undefined;
        "aria-live"?: "off" | "assertive" | "polite" | undefined;
        "aria-modal"?: (boolean | "true" | "false") | undefined;
        "aria-multiline"?: (boolean | "true" | "false") | undefined;
        "aria-multiselectable"?: (boolean | "true" | "false") | undefined;
        "aria-orientation"?: "horizontal" | "vertical" | undefined;
        "aria-owns"?: string | undefined;
        "aria-placeholder"?: string | undefined;
        "aria-posinset"?: number | undefined;
        "aria-pressed"?: boolean | "false" | "mixed" | "true" | undefined;
        "aria-readonly"?: (boolean | "true" | "false") | undefined;
        "aria-relevant"?: "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text" | "text additions" | "text removals" | undefined;
        "aria-required"?: (boolean | "true" | "false") | undefined;
        "aria-roledescription"?: string | undefined;
        "aria-rowcount"?: number | undefined;
        "aria-rowindex"?: number | undefined;
        "aria-rowindextext"?: string | undefined;
        "aria-rowspan"?: number | undefined;
        "aria-selected"?: (boolean | "true" | "false") | undefined;
        "aria-setsize"?: number | undefined;
        "aria-sort"?: "none" | "ascending" | "descending" | "other" | undefined;
        "aria-valuemax"?: number | undefined;
        "aria-valuemin"?: number | undefined;
        "aria-valuenow"?: number | undefined;
        "aria-valuetext"?: string | undefined;
        dangerouslySetInnerHTML?: {
            __html: string | TrustedHTML;
        } | undefined;
        onCopy?: import('../../../node_modules/react').ClipboardEventHandler<HTMLDivElement> | undefined;
        onCopyCapture?: import('../../../node_modules/react').ClipboardEventHandler<HTMLDivElement> | undefined;
        onCut?: import('../../../node_modules/react').ClipboardEventHandler<HTMLDivElement> | undefined;
        onCutCapture?: import('../../../node_modules/react').ClipboardEventHandler<HTMLDivElement> | undefined;
        onPaste?: import('../../../node_modules/react').ClipboardEventHandler<HTMLDivElement> | undefined;
        onPasteCapture?: import('../../../node_modules/react').ClipboardEventHandler<HTMLDivElement> | undefined;
        onCompositionEnd?: import('../../../node_modules/react').CompositionEventHandler<HTMLDivElement> | undefined;
        onCompositionEndCapture?: import('../../../node_modules/react').CompositionEventHandler<HTMLDivElement> | undefined;
        onCompositionStart?: import('../../../node_modules/react').CompositionEventHandler<HTMLDivElement> | undefined;
        onCompositionStartCapture?: import('../../../node_modules/react').CompositionEventHandler<HTMLDivElement> | undefined;
        onCompositionUpdate?: import('../../../node_modules/react').CompositionEventHandler<HTMLDivElement> | undefined;
        onCompositionUpdateCapture?: import('../../../node_modules/react').CompositionEventHandler<HTMLDivElement> | undefined;
        onFocus?: import('../../../node_modules/react').FocusEventHandler<HTMLDivElement> | undefined;
        onFocusCapture?: import('../../../node_modules/react').FocusEventHandler<HTMLDivElement> | undefined;
        onBlur?: import('../../../node_modules/react').FocusEventHandler<HTMLDivElement> | undefined;
        onBlurCapture?: import('../../../node_modules/react').FocusEventHandler<HTMLDivElement> | undefined;
        onChange?: ((event: import('../../../node_modules/react').SyntheticEvent, value: unknown, reason: import('@mui/material').AutocompleteChangeReason, details?: import('@mui/material').AutocompleteChangeDetails<unknown> | undefined) => void) | undefined;
        onChangeCapture?: import('../../../node_modules/react').FormEventHandler<HTMLDivElement> | undefined;
        onBeforeInput?: import('../../../node_modules/react').FormEventHandler<HTMLDivElement> | undefined;
        onBeforeInputCapture?: import('../../../node_modules/react').FormEventHandler<HTMLDivElement> | undefined;
        onInput?: import('../../../node_modules/react').FormEventHandler<HTMLDivElement> | undefined;
        onInputCapture?: import('../../../node_modules/react').FormEventHandler<HTMLDivElement> | undefined;
        onReset?: import('../../../node_modules/react').FormEventHandler<HTMLDivElement> | undefined;
        onResetCapture?: import('../../../node_modules/react').FormEventHandler<HTMLDivElement> | undefined;
        onSubmit?: import('../../../node_modules/react').FormEventHandler<HTMLDivElement> | undefined;
        onSubmitCapture?: import('../../../node_modules/react').FormEventHandler<HTMLDivElement> | undefined;
        onInvalid?: import('../../../node_modules/react').FormEventHandler<HTMLDivElement> | undefined;
        onInvalidCapture?: import('../../../node_modules/react').FormEventHandler<HTMLDivElement> | undefined;
        onLoad?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onLoadCapture?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onError?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onErrorCapture?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onKeyDown?: ((event: import('../../../node_modules/react').KeyboardEvent<HTMLDivElement> & {
            defaultMuiPrevented?: boolean;
        }) => void) | undefined;
        onKeyDownCapture?: import('../../../node_modules/react').KeyboardEventHandler<HTMLDivElement> | undefined;
        onKeyPress?: import('../../../node_modules/react').KeyboardEventHandler<HTMLDivElement> | undefined;
        onKeyPressCapture?: import('../../../node_modules/react').KeyboardEventHandler<HTMLDivElement> | undefined;
        onKeyUp?: import('../../../node_modules/react').KeyboardEventHandler<HTMLDivElement> | undefined;
        onKeyUpCapture?: import('../../../node_modules/react').KeyboardEventHandler<HTMLDivElement> | undefined;
        onAbort?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onAbortCapture?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onCanPlay?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onCanPlayCapture?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onCanPlayThrough?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onCanPlayThroughCapture?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onDurationChange?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onDurationChangeCapture?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onEmptied?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onEmptiedCapture?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onEncrypted?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onEncryptedCapture?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onEnded?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onEndedCapture?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onLoadedData?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onLoadedDataCapture?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onLoadedMetadata?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onLoadedMetadataCapture?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onLoadStart?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onLoadStartCapture?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onPause?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onPauseCapture?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onPlay?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onPlayCapture?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onPlaying?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onPlayingCapture?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onProgress?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onProgressCapture?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onRateChange?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onRateChangeCapture?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onResize?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onResizeCapture?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onSeeked?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onSeekedCapture?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onSeeking?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onSeekingCapture?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onStalled?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onStalledCapture?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onSuspend?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onSuspendCapture?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onTimeUpdate?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onTimeUpdateCapture?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onVolumeChange?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onVolumeChangeCapture?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onWaiting?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onWaitingCapture?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onAuxClick?: import('../../../node_modules/react').MouseEventHandler<HTMLDivElement> | undefined;
        onAuxClickCapture?: import('../../../node_modules/react').MouseEventHandler<HTMLDivElement> | undefined;
        onClick?: import('../../../node_modules/react').MouseEventHandler<HTMLDivElement> | undefined;
        onClickCapture?: import('../../../node_modules/react').MouseEventHandler<HTMLDivElement> | undefined;
        onContextMenu?: import('../../../node_modules/react').MouseEventHandler<HTMLDivElement> | undefined;
        onContextMenuCapture?: import('../../../node_modules/react').MouseEventHandler<HTMLDivElement> | undefined;
        onDoubleClick?: import('../../../node_modules/react').MouseEventHandler<HTMLDivElement> | undefined;
        onDoubleClickCapture?: import('../../../node_modules/react').MouseEventHandler<HTMLDivElement> | undefined;
        onDrag?: import('../../../node_modules/react').DragEventHandler<HTMLDivElement> | undefined;
        onDragCapture?: import('../../../node_modules/react').DragEventHandler<HTMLDivElement> | undefined;
        onDragEnd?: import('../../../node_modules/react').DragEventHandler<HTMLDivElement> | undefined;
        onDragEndCapture?: import('../../../node_modules/react').DragEventHandler<HTMLDivElement> | undefined;
        onDragEnter?: import('../../../node_modules/react').DragEventHandler<HTMLDivElement> | undefined;
        onDragEnterCapture?: import('../../../node_modules/react').DragEventHandler<HTMLDivElement> | undefined;
        onDragExit?: import('../../../node_modules/react').DragEventHandler<HTMLDivElement> | undefined;
        onDragExitCapture?: import('../../../node_modules/react').DragEventHandler<HTMLDivElement> | undefined;
        onDragLeave?: import('../../../node_modules/react').DragEventHandler<HTMLDivElement> | undefined;
        onDragLeaveCapture?: import('../../../node_modules/react').DragEventHandler<HTMLDivElement> | undefined;
        onDragOver?: import('../../../node_modules/react').DragEventHandler<HTMLDivElement> | undefined;
        onDragOverCapture?: import('../../../node_modules/react').DragEventHandler<HTMLDivElement> | undefined;
        onDragStart?: import('../../../node_modules/react').DragEventHandler<HTMLDivElement> | undefined;
        onDragStartCapture?: import('../../../node_modules/react').DragEventHandler<HTMLDivElement> | undefined;
        onDrop?: import('../../../node_modules/react').DragEventHandler<HTMLDivElement> | undefined;
        onDropCapture?: import('../../../node_modules/react').DragEventHandler<HTMLDivElement> | undefined;
        onMouseDown?: import('../../../node_modules/react').MouseEventHandler<HTMLDivElement> | undefined;
        onMouseDownCapture?: import('../../../node_modules/react').MouseEventHandler<HTMLDivElement> | undefined;
        onMouseEnter?: import('../../../node_modules/react').MouseEventHandler<HTMLDivElement> | undefined;
        onMouseLeave?: import('../../../node_modules/react').MouseEventHandler<HTMLDivElement> | undefined;
        onMouseMove?: import('../../../node_modules/react').MouseEventHandler<HTMLDivElement> | undefined;
        onMouseMoveCapture?: import('../../../node_modules/react').MouseEventHandler<HTMLDivElement> | undefined;
        onMouseOut?: import('../../../node_modules/react').MouseEventHandler<HTMLDivElement> | undefined;
        onMouseOutCapture?: import('../../../node_modules/react').MouseEventHandler<HTMLDivElement> | undefined;
        onMouseOver?: import('../../../node_modules/react').MouseEventHandler<HTMLDivElement> | undefined;
        onMouseOverCapture?: import('../../../node_modules/react').MouseEventHandler<HTMLDivElement> | undefined;
        onMouseUp?: import('../../../node_modules/react').MouseEventHandler<HTMLDivElement> | undefined;
        onMouseUpCapture?: import('../../../node_modules/react').MouseEventHandler<HTMLDivElement> | undefined;
        onSelect?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onSelectCapture?: import('../../../node_modules/react').ReactEventHandler<HTMLDivElement> | undefined;
        onTouchCancel?: import('../../../node_modules/react').TouchEventHandler<HTMLDivElement> | undefined;
        onTouchCancelCapture?: import('../../../node_modules/react').TouchEventHandler<HTMLDivElement> | undefined;
        onTouchEnd?: import('../../../node_modules/react').TouchEventHandler<HTMLDivElement> | undefined;
        onTouchEndCapture?: import('../../../node_modules/react').TouchEventHandler<HTMLDivElement> | undefined;
        onTouchMove?: import('../../../node_modules/react').TouchEventHandler<HTMLDivElement> | undefined;
        onTouchMoveCapture?: import('../../../node_modules/react').TouchEventHandler<HTMLDivElement> | undefined;
        onTouchStart?: import('../../../node_modules/react').TouchEventHandler<HTMLDivElement> | undefined;
        onTouchStartCapture?: import('../../../node_modules/react').TouchEventHandler<HTMLDivElement> | undefined;
        onPointerDown?: import('../../../node_modules/react').PointerEventHandler<HTMLDivElement> | undefined;
        onPointerDownCapture?: import('../../../node_modules/react').PointerEventHandler<HTMLDivElement> | undefined;
        onPointerMove?: import('../../../node_modules/react').PointerEventHandler<HTMLDivElement> | undefined;
        onPointerMoveCapture?: import('../../../node_modules/react').PointerEventHandler<HTMLDivElement> | undefined;
        onPointerUp?: import('../../../node_modules/react').PointerEventHandler<HTMLDivElement> | undefined;
        onPointerUpCapture?: import('../../../node_modules/react').PointerEventHandler<HTMLDivElement> | undefined;
        onPointerCancel?: import('../../../node_modules/react').PointerEventHandler<HTMLDivElement> | undefined;
        onPointerCancelCapture?: import('../../../node_modules/react').PointerEventHandler<HTMLDivElement> | undefined;
        onPointerEnter?: import('../../../node_modules/react').PointerEventHandler<HTMLDivElement> | undefined;
        onPointerLeave?: import('../../../node_modules/react').PointerEventHandler<HTMLDivElement> | undefined;
        onPointerOver?: import('../../../node_modules/react').PointerEventHandler<HTMLDivElement> | undefined;
        onPointerOverCapture?: import('../../../node_modules/react').PointerEventHandler<HTMLDivElement> | undefined;
        onPointerOut?: import('../../../node_modules/react').PointerEventHandler<HTMLDivElement> | undefined;
        onPointerOutCapture?: import('../../../node_modules/react').PointerEventHandler<HTMLDivElement> | undefined;
        onGotPointerCapture?: import('../../../node_modules/react').PointerEventHandler<HTMLDivElement> | undefined;
        onGotPointerCaptureCapture?: import('../../../node_modules/react').PointerEventHandler<HTMLDivElement> | undefined;
        onLostPointerCapture?: import('../../../node_modules/react').PointerEventHandler<HTMLDivElement> | undefined;
        onLostPointerCaptureCapture?: import('../../../node_modules/react').PointerEventHandler<HTMLDivElement> | undefined;
        onScroll?: import('../../../node_modules/react').UIEventHandler<HTMLDivElement> | undefined;
        onScrollCapture?: import('../../../node_modules/react').UIEventHandler<HTMLDivElement> | undefined;
        onWheel?: import('../../../node_modules/react').WheelEventHandler<HTMLDivElement> | undefined;
        onWheelCapture?: import('../../../node_modules/react').WheelEventHandler<HTMLDivElement> | undefined;
        onAnimationStart?: import('../../../node_modules/react').AnimationEventHandler<HTMLDivElement> | undefined;
        onAnimationStartCapture?: import('../../../node_modules/react').AnimationEventHandler<HTMLDivElement> | undefined;
        onAnimationEnd?: import('../../../node_modules/react').AnimationEventHandler<HTMLDivElement> | undefined;
        onAnimationEndCapture?: import('../../../node_modules/react').AnimationEventHandler<HTMLDivElement> | undefined;
        onAnimationIteration?: import('../../../node_modules/react').AnimationEventHandler<HTMLDivElement> | undefined;
        onAnimationIterationCapture?: import('../../../node_modules/react').AnimationEventHandler<HTMLDivElement> | undefined;
        onTransitionEnd?: import('../../../node_modules/react').TransitionEventHandler<HTMLDivElement> | undefined;
        onTransitionEndCapture?: import('../../../node_modules/react').TransitionEventHandler<HTMLDivElement> | undefined;
        ref?: import('../../../node_modules/react').Ref<unknown> | undefined;
        width?: number | undefined;
        mode?: "search" | undefined;
        open?: boolean | undefined;
        disablePortal?: boolean | undefined;
        onClose?: ((event: import('../../../node_modules/react').SyntheticEvent, reason: import('@mui/material').AutocompleteCloseReason) => void) | undefined;
        label?: string | import('../../../node_modules/react').ReactNode;
        disabled?: boolean | undefined;
        maxHeight?: number | undefined;
        value?: unknown;
        autoComplete?: boolean | undefined;
        loading?: boolean | undefined;
        multiple?: boolean | undefined;
        placeholder?: string | undefined;
        readOnly?: boolean | undefined;
        fullWidth?: boolean | undefined;
        error?: boolean | undefined;
        disabledItemsFocusable?: boolean | undefined;
        disableListWrap?: boolean | undefined;
        startAdornment?: import('../../../node_modules/react').ReactNode;
        onOpen?: ((event: import('../../../node_modules/react').SyntheticEvent) => void) | undefined;
        forcePopupIcon?: (true | false | "auto") | undefined;
        getLimitTagsText?: ((more: number) => import('../../../node_modules/react').ReactNode) | undefined;
        loadingText?: import('../../../node_modules/react').ReactNode;
        limitTags?: number | undefined;
        noOptionsText?: import('../../../node_modules/react').ReactNode;
        renderGroup?: ((params: import('@mui/material').AutocompleteRenderGroupParams) => import('../../../node_modules/react').ReactNode) | undefined;
        renderOption?: ((props: import('../../../node_modules/react').HTMLAttributes<HTMLLIElement> & {
            key: any;
        }, option: unknown, state: import('@mui/material').AutocompleteRenderOptionState, ownerState: import('@mui/material').AutocompleteOwnerState<unknown, boolean, boolean, boolean, "div">) => import('../../../node_modules/react').ReactNode) | undefined;
        renderTags?: ((value: unknown[], getTagProps: import('@mui/material').AutocompleteRenderGetTagProps, ownerState: import('@mui/material').AutocompleteOwnerState<unknown, boolean, boolean, boolean, "div">) => import('../../../node_modules/react').ReactNode) | undefined;
        unstable_classNamePrefix?: string | undefined;
        unstable_isActiveElementInListbox?: ((listbox: import('../../../node_modules/react').RefObject<HTMLElement>) => boolean) | undefined;
        autoHighlight?: boolean | undefined;
        autoSelect?: boolean | undefined;
        blurOnSelect?: ("touch" | "mouse" | true | false) | undefined;
        clearOnBlur?: boolean | undefined;
        clearOnEscape?: boolean | undefined;
        componentName?: string | undefined;
        disableClearable?: boolean | undefined;
        disableCloseOnSelect?: boolean | undefined;
        filterOptions?: ((options: unknown[], state: import('@mui/material').FilterOptionsState<unknown>) => unknown[]) | undefined;
        filterSelectedOptions?: boolean | undefined;
        freeSolo?: boolean | undefined;
        getOptionDisabled?: ((option: unknown) => boolean) | undefined;
        getOptionKey?: ((option: unknown) => string | number) | undefined;
        getOptionLabel?: ((option: unknown) => string) | undefined;
        groupBy?: ((option: unknown) => string) | undefined;
        handleHomeEndKeys?: boolean | undefined;
        includeInputInList?: boolean | undefined;
        inputValue?: string | undefined;
        isOptionEqualToValue?: ((option: unknown, value: unknown) => boolean) | undefined;
        onHighlightChange?: ((event: import('../../../node_modules/react').SyntheticEvent, option: unknown, reason: import('@mui/material').AutocompleteHighlightChangeReason) => void) | undefined;
        onInputChange?: ((event: import('../../../node_modules/react').SyntheticEvent, value: string, reason: import('@mui/material').AutocompleteInputChangeReason) => void) | undefined;
        openOnFocus?: boolean | undefined;
        selectOnFocus?: boolean | undefined;
        helperText?: string | undefined;
        getChipIcon?: ((option: unknown) => any) | undefined;
    }>) => import("react/jsx-runtime").JSX.Element)[];
};
export default meta;
export type TeliTypeaheadStory = StoryObj<typeof TeliTypeahead>;
export { MultiSelect, FreeSolo };
