import{j as t}from"./jsx-runtime-Nms4Y4qS.js";import{b as d,a as O,_ as W}from"./createTheme-CnHyYZiq.js";import{_ as n}from"./extends-CCbyfPlC.js";import{r as f}from"./index-BwDkhjyp.js";import{g as F,s as U,r as q,a as w,c as A,b as D}from"./styled-jK8V3O51.js";import{S as G,F as J}from"./FormControlLabel-CJWVnRLB.js";import{c as k}from"./createSvgIcon-Dt4Rk6ns.js";import{g as K}from"./generateUtilityClasses-BGohe2Km.js";import"./_commonjsHelpers-BosuxZz1.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-B7e5eAmX.js";import"./useFormControl-DPp5-Ez4.js";import"./ButtonBase-Er_LceZN.js";import"./TransitionGroupContext-Dii4aaAC.js";import"./assertThisInitialized-B9jnkVVz.js";import"./inheritsLoose-B7h9gheN.js";import"./useForkRef-UxOPvILp.js";import"./useControlled-DpTMnm0X.js";import"./Typography-CJaAKyn9.js";import"./Stack-CQt_0ICX.js";import"./styled-DIAKr2Jf.js";import"./SvgIcon-C67DTzBI.js";const Q=k(t.jsx("path",{d:"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"}),"CheckBoxOutlineBlank"),X=k(t.jsx("path",{d:"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"}),"CheckBox"),Y=k(t.jsx("path",{d:"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z"}),"IndeterminateCheckBox");function Z(e){return F("MuiCheckbox",e)}const b=K("MuiCheckbox",["root","checked","disabled","indeterminate","colorPrimary","colorSecondary","sizeSmall","sizeMedium"]),ee=["checkedIcon","color","icon","indeterminate","indeterminateIcon","inputProps","size","className"],oe=e=>{const{classes:o,indeterminate:a,color:s,size:c}=e,r={root:["root",a&&"indeterminate",`color${d(s)}`,`size${d(c)}`]},u=D(r,Z,o);return n({},o,u)},te=U(G,{shouldForwardProp:e=>q(e)||e==="classes",name:"MuiCheckbox",slot:"Root",overridesResolver:(e,o)=>{const{ownerState:a}=e;return[o.root,a.indeterminate&&o.indeterminate,o[`size${d(a.size)}`],a.color!=="default"&&o[`color${d(a.color)}`]]}})(({theme:e,ownerState:o})=>n({color:(e.vars||e).palette.text.secondary},!o.disableRipple&&{"&:hover":{backgroundColor:e.vars?`rgba(${o.color==="default"?e.vars.palette.action.activeChannel:e.vars.palette[o.color].mainChannel} / ${e.vars.palette.action.hoverOpacity})`:O(o.color==="default"?e.palette.action.active:e.palette[o.color].main,e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}}},o.color!=="default"&&{[`&.${b.checked}, &.${b.indeterminate}`]:{color:(e.vars||e).palette[o.color].main},[`&.${b.disabled}`]:{color:(e.vars||e).palette.action.disabled}})),ae=t.jsx(X,{}),re=t.jsx(Q,{}),ne=t.jsx(Y,{}),z=f.forwardRef(function(o,a){var s,c;const r=w({props:o,name:"MuiCheckbox"}),{checkedIcon:u=ae,color:R="primary",icon:L=re,indeterminate:i=!1,indeterminateIcon:C=ne,inputProps:H,size:h="medium",className:T}=r,V=W(r,ee),v=i?C:L,I=i?C:u,g=n({},r,{color:R,indeterminate:i,size:h}),y=oe(g);return t.jsx(te,n({type:"checkbox",inputProps:n({"data-indeterminate":i},H),icon:f.cloneElement(v,{fontSize:(s=v.props.fontSize)!=null?s:h}),checkedIcon:f.cloneElement(I,{fontSize:(c=I.props.fontSize)!=null?c:h}),ownerState:g,ref:a,className:A(y.root,T)},V,{classes:y}))}),x=({label:e,...o})=>e?t.jsx(J,{control:t.jsx(z,{...o}),label:e,className:"m-0"}):t.jsx(z,{...o});try{x.displayName="TeliCheckbox",x.__docgenInfo={description:`Checkboxes can be used to turn one or more options on or off.
If you have multiple options appearing in a list, you can preserve space by using checkboxes instead of on/off switches.
If you have a single option, avoid using a checkbox and use an on/off switch instead.
More information about this component can be found [here](https://mui.com/material-ui/react-checkbox/)`,displayName:"TeliCheckbox",props:{label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLButtonElement | null) => void) | RefObject<HTMLButtonElement> | null"}},component:{defaultValue:null,description:"",name:"component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}}}}}catch{}const Be={component:x},l={args:{label:"checkbox label"}},p={args:{disableRipple:!0,inputProps:{"aria-label":"Without label"}}},m={args:{icon:t.jsx("i",{className:"ri-heart-3-line"}),checkedIcon:t.jsx("i",{className:"ri-heart-3-fill"})}};var _,j,B;l.parameters={...l.parameters,docs:{...(_=l.parameters)==null?void 0:_.docs,source:{originalSource:`{
  args: {
    label: "checkbox label"
  }
}`,...(B=(j=l.parameters)==null?void 0:j.docs)==null?void 0:B.source}}};var $,M,P;p.parameters={...p.parameters,docs:{...($=p.parameters)==null?void 0:$.docs,source:{originalSource:`{
  args: {
    disableRipple: true,
    inputProps: {
      "aria-label": "Without label"
    }
  }
}`,...(P=(M=p.parameters)==null?void 0:M.docs)==null?void 0:P.source}}};var N,S,E;m.parameters={...m.parameters,docs:{...(N=m.parameters)==null?void 0:N.docs,source:{originalSource:`{
  args: {
    icon: <i className="ri-heart-3-line" />,
    checkedIcon: <i className="ri-heart-3-fill" />
  }
}`,...(E=(S=m.parameters)==null?void 0:S.docs)==null?void 0:E.source}}};const $e=["Basic","WithoutLabel","CheckboxIcon"];export{l as Basic,m as CheckboxIcon,p as WithoutLabel,$e as __namedExportsOrder,Be as default};
