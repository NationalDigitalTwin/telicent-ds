import{j as o}from"./jsx-runtime-CexXSJP5.js";import{g as i,e as v,p as k,q as y,_ as T}from"./createTheme-BI2OWDpv.js";import{_ as c}from"./extends-BFqQA52f.js";import{r as S}from"./index-BP8_t0zE.js";import{g as x,s as d,c as $,a as C}from"./styled-CwhWP0k9.js";import{S as R,F as z}from"./FormControlLabel-CExt9vJ5.js";import{g as q}from"./generateUtilityClasses-CPjhs1S_.js";import{u as M}from"./DefaultPropsProvider-D6MvNwoC.js";function I(e){return x("MuiSwitch",e)}const a=q("MuiSwitch",["root","edgeStart","edgeEnd","switchBase","colorPrimary","colorSecondary","sizeSmall","sizeMedium","checked","disabled","input","thumb","track"]),j=["className","color","edge","size","sx"],E=e=>{const{classes:t,edge:s,size:n,color:p,checked:u,disabled:h}=e,m={root:["root",s&&`edge${i(s)}`,`size${i(n)}`],switchBase:["switchBase",`color${i(p)}`,u&&"checked",h&&"disabled"],thumb:["thumb"],track:["track"],input:["input"]},g=C(m,I,t);return c({},t,g)},L=d("span",{name:"MuiSwitch",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:s}=e;return[t.root,s.edge&&t[`edge${i(s.edge)}`],t[`size${i(s.size)}`]]}})({display:"inline-flex",width:34+12*2,height:14+12*2,overflow:"hidden",padding:12,boxSizing:"border-box",position:"relative",flexShrink:0,zIndex:0,verticalAlign:"middle","@media print":{colorAdjust:"exact"},variants:[{props:{edge:"start"},style:{marginLeft:-8}},{props:{edge:"end"},style:{marginRight:-8}},{props:{size:"small"},style:{width:40,height:24,padding:7,[`& .${a.thumb}`]:{width:16,height:16},[`& .${a.switchBase}`]:{padding:4,[`&.${a.checked}`]:{transform:"translateX(16px)"}}}}]}),B=d(R,{name:"MuiSwitch",slot:"SwitchBase",overridesResolver:(e,t)=>{const{ownerState:s}=e;return[t.switchBase,{[`& .${a.input}`]:t.input},s.color!=="default"&&t[`color${i(s.color)}`]]}})(({theme:e})=>({position:"absolute",top:0,left:0,zIndex:1,color:e.vars?e.vars.palette.Switch.defaultColor:`${e.palette.mode==="light"?e.palette.common.white:e.palette.grey[300]}`,transition:e.transitions.create(["left","transform"],{duration:e.transitions.duration.shortest}),[`&.${a.checked}`]:{transform:"translateX(20px)"},[`&.${a.disabled}`]:{color:e.vars?e.vars.palette.Switch.defaultDisabledColor:`${e.palette.mode==="light"?e.palette.grey[100]:e.palette.grey[600]}`},[`&.${a.checked} + .${a.track}`]:{opacity:.5},[`&.${a.disabled} + .${a.track}`]:{opacity:e.vars?e.vars.opacity.switchTrackDisabled:`${e.palette.mode==="light"?.12:.2}`},[`& .${a.input}`]:{left:"-100%",width:"300%"}}),({theme:e})=>({"&:hover":{backgroundColor:e.vars?`rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})`:v(e.palette.action.active,e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}},variants:[...Object.entries(e.palette).filter(([,t])=>t.main&&t.light).map(([t])=>({props:{color:t},style:{[`&.${a.checked}`]:{color:(e.vars||e).palette[t].main,"&:hover":{backgroundColor:e.vars?`rgba(${e.vars.palette[t].mainChannel} / ${e.vars.palette.action.hoverOpacity})`:v(e.palette[t].main,e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}},[`&.${a.disabled}`]:{color:e.vars?e.vars.palette.Switch[`${t}DisabledColor`]:`${e.palette.mode==="light"?k(e.palette[t].main,.62):y(e.palette[t].main,.55)}`}},[`&.${a.checked} + .${a.track}`]:{backgroundColor:(e.vars||e).palette[t].main}}}))]})),_=d("span",{name:"MuiSwitch",slot:"Track",overridesResolver:(e,t)=>t.track})(({theme:e})=>({height:"100%",width:"100%",borderRadius:14/2,zIndex:-1,transition:e.transitions.create(["opacity","background-color"],{duration:e.transitions.duration.shortest}),backgroundColor:e.vars?e.vars.palette.common.onBackground:`${e.palette.mode==="light"?e.palette.common.black:e.palette.common.white}`,opacity:e.vars?e.vars.opacity.switchTrack:`${e.palette.mode==="light"?.38:.3}`})),O=d("span",{name:"MuiSwitch",slot:"Thumb",overridesResolver:(e,t)=>t.thumb})(({theme:e})=>({boxShadow:(e.vars||e).shadows[1],backgroundColor:"currentColor",width:20,height:20,borderRadius:"50%"})),b=S.forwardRef(function(t,s){const n=M({props:t,name:"MuiSwitch"}),{className:p,color:u="primary",edge:h=!1,size:m="medium",sx:g}=n,w=T(n,j),r=c({},n,{color:u,edge:h,size:m}),l=E(r),f=o.jsx(O,{className:l.thumb,ownerState:r});return o.jsxs(L,{className:$(l.root,p),sx:g,ownerState:r,children:[o.jsx(B,c({type:"checkbox",icon:f,checkedIcon:f,ref:s,ownerState:r},w,{classes:c({},l,{root:l.switchBase})})),o.jsx(_,{className:l.track,ownerState:r})]})}),H=({label:e,labelPlacement:t="end",size:s="small",...n})=>e?o.jsx(z,{control:o.jsx(b,{size:s,...n}),label:e,labelPlacement:t,className:"m-0 gap-x-1.5",componentsProps:{typography:{fontSize:14}}}):o.jsx(b,{size:s,...n});H.__docgenInfo={description:`Switches toggle the state of a single setting on or off. The option that the
switch controls, as well as the state it's in, should be made clear from the
corresponding inline label. If unsure when to use toggle switch or checkbox,
refer to [Checkbox vs Toggle
Switch](https://uxplanet.org/checkbox-vs-toggle-switch-7fc6e83f10b8)`,methods:[],displayName:"TeliSwitch",props:{checked:{required:!1,tsType:{name:"boolean"},description:"If true, the component is checked."},defaultChecked:{required:!1,tsType:{name:"boolean"},description:"The default checked state. Use when the component is not controlled."},disabled:{required:!1,tsType:{name:"boolean"},description:"If true, the component is disabled."},edge:{required:!1,tsType:{name:"union",raw:'"end" | "start"',elements:[{name:"literal",value:'"end"'},{name:"literal",value:'"start"'}]},description:`If given, uses a negative margin to counteract the padding on one side
(this is often helpful for aligning the left or right side of the icon with
content above or below, without ruining the border size and shape).`},id:{required:!1,tsType:{name:"string"},description:"The id of the input element."},inputProps:{required:!1,tsType:{name:"HTMLAttributes",elements:[{name:"HTMLInputElement"}],raw:"HTMLAttributes<HTMLInputElement>"},description:`[Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attributes)
applied to the input element.`},inputRef:{required:!1,tsType:{name:"union",raw:"React.RefObject<HTMLInputElement> | null",elements:[{name:"ReactRefObject",raw:"React.RefObject<HTMLInputElement>",elements:[{name:"HTMLInputElement"}]},{name:"null"}]},description:"Pass a ref to the input element."},label:{required:!1,tsType:{name:"string"},description:"Text to be used in an enclosing label element."},labelPlacement:{required:!1,tsType:{name:"union",raw:'"start" | "end"',elements:[{name:"literal",value:'"start"'},{name:"literal",value:'"end"'}]},description:`The position of the label.
@default end`,defaultValue:{value:'"end"',computed:!1}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: React.ChangeEvent) => void",signature:{arguments:[{type:{name:"ReactChangeEvent",raw:"React.ChangeEvent"},name:"event"}],return:{name:"void"}}},description:`Callback fired when the state is changed. <code>event</code> The event
source of the callback. You can pull out the new value by accessing
event.target.value (string). You can pull out the new checked state by
accessing event.target.checked (boolean)`},required:{required:!1,tsType:{name:"boolean"},description:"If true, the input element is required."},size:{required:!1,tsType:{name:"union",raw:'"small" | "medium"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'}]},description:`The size of the component. small is equivalent to the dense switch styling.
@default small`,defaultValue:{value:'"small"',computed:!1}},value:{required:!1,tsType:{name:"any"},description:`The value of the component. The DOM API casts this to a string. The browser
uses "on" as the default value.`}}};export{H as T};
