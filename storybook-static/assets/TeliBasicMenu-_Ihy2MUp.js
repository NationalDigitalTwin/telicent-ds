import{j as r}from"./jsx-runtime-CexXSJP5.js";import{r as n}from"./index-BP8_t0zE.js";import{c as B}from"./index-CSpfAsmC.js";import{T as V}from"./TeliButton-DBBf574w.js";import{M as O}from"./MenuList-BbY1aGr7.js";import{M as A}from"./MenuItem-CMhrTc-x.js";/* empty css                      */import{P as D}from"./Popper-Cg5SJw39.js";import{G as U}from"./Grow-Dt6YTbxq.js";import{P as K}from"./Paper-DEGHyXeH.js";import{u as F}from"./useForkRef-rM2yqL0Y.js";import{b as _}from"./TransitionGroupContext-Cc1z3uP3.js";import{o as x}from"./ownerDocument-DW-IO8s5.js";function N(l){return l.substring(2).toLowerCase()}function G(l,u){return u.documentElement.clientWidth<l.clientX||u.documentElement.clientHeight<l.clientY}function W(l){const{children:u,disableReactTree:y=!1,mouseEvent:a="onClick",onClickAway:f,touchEvent:c="onTouchEnd"}=l,h=n.useRef(!1),o=n.useRef(null),e=n.useRef(!1),E=n.useRef(!1);n.useEffect(()=>(setTimeout(()=>{e.current=!0},0),()=>{e.current=!1}),[]);const b=F(u.ref,o),m=_(t=>{const i=E.current;E.current=!1;const d=x(o.current);if(!e.current||!o.current||"clientX"in t&&G(t,d))return;if(h.current){h.current=!1;return}let T;t.composedPath?T=t.composedPath().indexOf(o.current)>-1:T=!d.documentElement.contains(t.target)||o.current.contains(t.target),!T&&(y||!i)&&f(t)}),R=t=>i=>{E.current=!0;const d=u.props[t];d&&d(i)},v={ref:b};return c!==!1&&(v[c]=R(c)),n.useEffect(()=>{if(c!==!1){const t=N(c),i=x(o.current),d=()=>{h.current=!0};return i.addEventListener(t,m),i.addEventListener("touchmove",d),()=>{i.removeEventListener(t,m),i.removeEventListener("touchmove",d)}}},[m,c]),a!==!1&&(v[a]=R(a)),n.useEffect(()=>{if(a!==!1){const t=N(a),i=x(o.current);return i.addEventListener(t,m),()=>{i.removeEventListener(t,m)}}},[m,a]),r.jsx(n.Fragment,{children:n.cloneElement(u,v)})}const L=({buttonId:l,listId:u,emptyMessage:y="Nothing found",menuItems:a=[],open:f,onKeyDown:c,onMenuItemClick:h,children:o})=>o||(a==null?void 0:a.length)>0?r.jsxs(r.Fragment,{children:[o&&r.jsx("div",{className:"teli-menu-contents",children:o}),(a==null?void 0:a.length)>0&&r.jsx(O,{autoFocusItem:f,id:u,"aria-labelledby":l,onKeyDown:c,children:a.map(e=>r.jsxs(A,{onClick:h(e.onClick),children:[e==null?void 0:e.startIcon,e==null?void 0:e.label,e==null?void 0:e.endIcon]},e.id))})]}):r.jsx("p",{className:"teli-menu-contents teli-empty-menu-contents",children:y});L.__docgenInfo={description:"",methods:[],displayName:"BasicMenuContents",props:{buttonId:{required:!1,tsType:{name:"any"},description:""},children:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},emptyMessage:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"Nothing found"',computed:!1}},listId:{required:!1,tsType:{name:"any"},description:""},menuItems:{required:!1,tsType:{name:"Array",elements:[{name:"MenuItem"}],raw:"MenuItem[]"},description:"",defaultValue:{value:"[]",computed:!1}},open:{required:!1,tsType:{name:"boolean"},description:""},onKeyDown:{required:!1,tsType:{name:"ReactKeyboardEventHandler",raw:"React.KeyboardEventHandler<HTMLUListElement>",elements:[{name:"HTMLUListElement"}]},description:""},onMenuItemClick:{required:!0,tsType:{name:"signature",type:"function",raw:`(
  onClick?: (event?: Event | React.SyntheticEvent) => void
) => (event: Event | React.SyntheticEvent) => void`,signature:{arguments:[{type:{name:"signature",type:"function",raw:"(event?: Event | React.SyntheticEvent) => void",signature:{arguments:[{type:{name:"union",raw:"Event | React.SyntheticEvent",elements:[{name:"Event"},{name:"ReactSyntheticEvent",raw:"React.SyntheticEvent"}]},name:"event"}],return:{name:"void"}}},name:"onClick"}],return:{name:"signature",type:"function",raw:"(event: Event | React.SyntheticEvent) => void",signature:{arguments:[{type:{name:"union",raw:"Event | React.SyntheticEvent",elements:[{name:"Event"},{name:"ReactSyntheticEvent",raw:"React.SyntheticEvent"}]},name:"event"}],return:{name:"void"}}}}},description:""}}};const X=({buttonId:l,label:u,listId:y,menuItems:a=[],defaultOpen:f=!1,disabled:c=!1,emptyMessage:h,open:o,tooltip:e,startIcon:E,endIcon:b,width:m,variant:R="tertiary",yPlacement:v="bottom",xPlacement:t=v,onOpen:i,onClose:d,children:T})=>{const{current:C}=n.useRef(o!==void 0),[j,M]=n.useState(!1),p=C?o:j,g=n.useRef(null),P=n.useRef(p),w=n.useCallback(s=>{C||M(s)},[]),I=()=>{M(s=>!s)},k=s=>{g.current&&g.current.contains(s.target)||w(!1)},S=s=>q=>{s&&s(),k(q)},H=s=>{s.key==="Tab"?(s.preventDefault(),w(!1)):s.key==="Escape"&&w(!1)};return n.useEffect(()=>{P.current=p},[p]),n.useEffect(()=>{f&&w(!0)},[]),n.useEffect(()=>{if(c&&p){M(!1);return}},[c]),r.jsxs("div",{className:"teli-basic-menu",children:[r.jsx(V,{ref:g,id:l,variant:R,tooltip:e,startIcon:E,endIcon:b,disabled:c,"aria-controls":p?"composition-menu":void 0,"aria-expanded":p?"true":void 0,"aria-haspopup":"true",onClick:i??I,className:B({"bg-teli-black-600":p}),children:u}),r.jsx(D,{transition:!0,disablePortal:!0,open:p??f,anchorEl:g.current,placement:v,modifiers:[{name:"offset",options:{offset:[0,8]}}],sx:{width:m},children:({TransitionProps:s,placement:q})=>r.jsx(U,{...s,style:{transformOrigin:t??q},children:r.jsx(K,{children:r.jsx(W,{onClickAway:d??k,children:r.jsx("div",{children:r.jsx(L,{open:p??f,menuItems:a,emptyMessage:h,buttonId:l,listId:y,onKeyDown:H,onMenuItemClick:S,children:T})})})})})})]})};X.__docgenInfo={description:"",methods:[],displayName:"TeliBasicMenu",props:{buttonId:{required:!1,tsType:{name:"string"},description:"The id of the Button element."},children:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"The menu contents."},defaultOpen:{required:!1,tsType:{name:"boolean"},description:`If true, the component is initially open. Use when the component open state
is not controlled (i.e. the open prop is not defined).`,defaultValue:{value:"false",computed:!1}},disabled:{required:!1,tsType:{name:"boolean"},description:"If true, the component will be displayed in a disabled state",defaultValue:{value:"false",computed:!1}},emptyMessage:{required:!1,tsType:{name:"string"},description:"The message to be displayed when menu items are empty."},endIcon:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"Element placed after the children."},listId:{required:!1,tsType:{name:"string"},description:"The id of the MenuList component."},label:{required:!0,tsType:{name:"union",raw:"string | React.ReactNode",elements:[{name:"string"},{name:"ReactReactNode",raw:"React.ReactNode"}]},description:"The content of the Button component."},menuItems:{required:!1,tsType:{name:"Array",elements:[{name:"MenuItem"}],raw:"MenuItem[]"},description:"Menu content items.",defaultValue:{value:"[]",computed:!1}},open:{required:!1,tsType:{name:"boolean"},description:"If true, the menu component will be shown."},onOpen:{required:!1,tsType:{name:"ReactMouseEventHandler",raw:"React.MouseEventHandler<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},description:`Callback fired when the component requests to be opened. Use it for
controlled mode.`},onClose:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: MouseEvent | TouchEvent) => void",signature:{arguments:[{type:{name:"union",raw:"MouseEvent | TouchEvent",elements:[{name:"MouseEvent"},{name:"TouchEvent"}]},name:"event"}],return:{name:"void"}}},description:`Callback fired when the component requests to be closed. Use it for
controlled mode.`},startIcon:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"Element placed before the children."},tooltip:{required:!1,tsType:{name:"string"},description:"Tooltip contents refer to [Button component](/?path=/docs/components-telibutton--docs)."},variant:{required:!1,tsType:{name:"union",raw:'"tertiary" | "basic"',elements:[{name:"literal",value:'"tertiary"'},{name:"literal",value:'"basic"'}]},description:"The variant to use.",defaultValue:{value:'"tertiary"',computed:!1}},width:{required:!1,tsType:{name:"number"},description:"Width of the menu component."},xPlacement:{required:!1,tsType:{name:"PopperPlacementType"},description:"Vertical menu placement.",defaultValue:{value:'yPlacement = "bottom"',computed:!1}},yPlacement:{required:!1,tsType:{name:"PopperPlacementType"},description:"Horizontal menu placement.",defaultValue:{value:'"bottom"',computed:!1}}}};export{X as T};
