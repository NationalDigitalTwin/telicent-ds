import{j as r}from"./jsx-runtime-CexXSJP5.js";import{g as d,e as F,_ as U}from"./createTheme-BI2OWDpv.js";import{_ as s}from"./extends-BFqQA52f.js";import{r as x}from"./index-BP8_t0zE.js";import{g as V,s as T,r as w,c as q,a as D}from"./styled-CwhWP0k9.js";import{S as A,F as G}from"./FormControlLabel-CExt9vJ5.js";import{c as f}from"./createSvgIcon-BSqKsiVD.js";import{g as J}from"./generateUtilityClasses-CPjhs1S_.js";import{u as K}from"./DefaultPropsProvider-D6MvNwoC.js";import"./StyledEngineProvider-CtQ9vdjp.js";import"./useFormControl-CHYNG1zi.js";import"./ButtonBase-DxHKNkXA.js";import"./TransitionGroupContext-Cc1z3uP3.js";import"./assertThisInitialized-B9jnkVVz.js";import"./inheritsLoose-DR8r8Ogv.js";import"./useForkRef-rM2yqL0Y.js";import"./useControlled-im5M3O13.js";import"./Typography-DE0lXvn2.js";import"./Stack-8PiQyM1k.js";import"./styled-B7SqznG2.js";import"./useThemeProps-Cz3Ol-ZY.js";import"./useTheme-BOvJgVym.js";import"./useThemeWithoutDefault-C3kYH7vc.js";import"./SvgIcon-C5tcZsyu.js";const Q=f(r.jsx("path",{d:"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"}),"CheckBoxOutlineBlank"),X=f(r.jsx("path",{d:"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"}),"CheckBox"),Y=f(r.jsx("path",{d:"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z"}),"IndeterminateCheckBox");function Z(o){return V("MuiCheckbox",o)}const b=J("MuiCheckbox",["root","checked","disabled","indeterminate","colorPrimary","colorSecondary","sizeSmall","sizeMedium"]),oo=["checkedIcon","color","icon","indeterminate","indeterminateIcon","inputProps","size","className"],eo=o=>{const{classes:e,indeterminate:t,color:c,size:n}=o,a={root:["root",t&&"indeterminate",`color${d(c)}`,`size${d(n)}`]},u=D(a,Z,e);return s({},e,u)},ro=T(A,{shouldForwardProp:o=>w(o)||o==="classes",name:"MuiCheckbox",slot:"Root",overridesResolver:(o,e)=>{const{ownerState:t}=o;return[e.root,t.indeterminate&&e.indeterminate,e[`size${d(t.size)}`],t.color!=="default"&&e[`color${d(t.color)}`]]}})(({theme:o,ownerState:e})=>s({color:(o.vars||o).palette.text.secondary},!e.disableRipple&&{"&:hover":{backgroundColor:o.vars?`rgba(${e.color==="default"?o.vars.palette.action.activeChannel:o.vars.palette[e.color].mainChannel} / ${o.vars.palette.action.hoverOpacity})`:F(e.color==="default"?o.palette.action.active:o.palette[e.color].main,o.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}}},e.color!=="default"&&{[`&.${b.checked}, &.${b.indeterminate}`]:{color:(o.vars||o).palette[e.color].main},[`&.${b.disabled}`]:{color:(o.vars||o).palette.action.disabled}})),to=r.jsx(X,{}),ao=r.jsx(Q,{}),so=r.jsx(Y,{}),z=x.forwardRef(function(e,t){var c,n;const a=K({props:e,name:"MuiCheckbox"}),{checkedIcon:u=to,color:L="primary",icon:E=ao,indeterminate:i=!1,indeterminateIcon:k=so,inputProps:H,size:h="medium",className:O}=a,W=U(a,oo),C=i?k:E,v=i?k:u,g=s({},a,{color:L,indeterminate:i,size:h}),I=eo(g);return r.jsx(ro,s({type:"checkbox",inputProps:s({"data-indeterminate":i},H),icon:x.cloneElement(C,{fontSize:(c=C.props.fontSize)!=null?c:h}),checkedIcon:x.cloneElement(v,{fontSize:(n=v.props.fontSize)!=null?n:h}),ownerState:g,ref:t,className:q(I.root,O)},W,{classes:I}))}),R=({label:o,...e})=>o?r.jsx(G,{control:r.jsx(z,{...e}),label:o,className:"m-0"}):r.jsx(z,{...e});R.__docgenInfo={description:`Checkboxes can be used to turn one or more options on or off.
If you have multiple options appearing in a list, you can preserve space by using checkboxes instead of on/off switches.
If you have a single option, avoid using a checkbox and use an on/off switch instead.
More information about this component can be found [here](https://mui.com/material-ui/react-checkbox/)`,methods:[],displayName:"TeliCheckbox",props:{label:{required:!1,tsType:{name:"string"},description:""}},composes:["CheckboxProps"]};const Mo={component:R},l={args:{label:"checkbox label"}},p={args:{disableRipple:!0,inputProps:{"aria-label":"Without label"}}},m={args:{icon:r.jsx("i",{className:"ri-heart-3-line"}),checkedIcon:r.jsx("i",{className:"ri-heart-3-fill"})}};var j,y,P;l.parameters={...l.parameters,docs:{...(j=l.parameters)==null?void 0:j.docs,source:{originalSource:`{
  args: {
    label: "checkbox label"
  }
}`,...(P=(y=l.parameters)==null?void 0:y.docs)==null?void 0:P.source}}};var _,$,B;p.parameters={...p.parameters,docs:{...(_=p.parameters)==null?void 0:_.docs,source:{originalSource:`{
  args: {
    disableRipple: true,
    inputProps: {
      "aria-label": "Without label"
    }
  }
}`,...(B=($=p.parameters)==null?void 0:$.docs)==null?void 0:B.source}}};var S,M,N;m.parameters={...m.parameters,docs:{...(S=m.parameters)==null?void 0:S.docs,source:{originalSource:`{
  args: {
    icon: <i className="ri-heart-3-line" />,
    checkedIcon: <i className="ri-heart-3-fill" />
  }
}`,...(N=(M=m.parameters)==null?void 0:M.docs)==null?void 0:N.source}}};const No=["Basic","WithoutLabel","CheckboxIcon"];export{l as Basic,m as CheckboxIcon,p as WithoutLabel,No as __namedExportsOrder,Mo as default};
